# Inspired by:
# https://github.com/teppeis-sandbox/circleci2-multiple-node-versions/blob/master/.circleci/config.yml
#
# List of node images:
# https://hub.docker.com/r/circleci/node/tags/
#
# Note that we use the '-browsers' variation which wraps electron with xvfb
# for headless testing

workflows:
  version: 2
  test-and-push:
    jobs:
      - test-node-v6
      - test-node-v8
      - docker-build-and-push:
          requires:
            - test-node-v6
            - test-node-v8
      - electron-pack-and-release:
          requires:
            - test-node-v6
            - test-node-v8

version: 2
jobs:
  base: &base
    docker:
      - image: node
    steps:
      - run:
          name: List versions
          command: |
            echo "npm: $(npm --version)"
            echo "node: $(node --version)"
      - restore_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          keys:
            - v1-source-{{ .Branch }}-
            - v1-source-
      - checkout
      - save_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - restore_cache:
          key: v3-npm-{{ checksum "package-lock.json" }}
          keys:
            - v3-npm-
      - run: node --version
      - run: npm --version
      - run:
          name: Install deps
          command: |
            npm install
            sudo apt-get install poppler-utils
      - run:
          name: List deps
          command: |
            npm list || true
            pdftops -v
      - save_cache:
          key: v3-npm-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: Test
          command: ./.circleci/test.sh
      - run:
          name: Coverage
          command: npm run coverage
      - store_artifacts:
          path: build

  test-node-v6:
    <<: *base
    docker:
      - image: circleci/node:6.14.1-browsers

  test-node-v8:
    <<: *base
    docker:
      - image: circleci/node:8.11.1-browsers

  docker-build-and-push:
    docker:
      - image: circleci/node:8.11.1-browsers
    steps:
      - setup_remote_docker:
          reusable: true

      - restore_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          keys:
            - v1-source-{{ .Branch }}-
            - v1-source-
      - checkout
      - save_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - restore_cache:
          keys:
            - v3-npm-{{ checksum "package-lock.json" }}
      - run:
          name: Build Docker image
          command: |
            docker build -f deployment/Dockerfile -t quay.io/plotly/image-exporter:$CIRCLE_SHA1 .
      - run:
          name: Smoke test Docker image
          command: |
            docker run -d -p 9091:9091/tcp --name imageserver quay.io/plotly/image-exporter:$CIRCLE_SHA1
            docker run --network container:imageserver quay.io/plotly/wget wget --retry-connrefused --waitretry=1 -t 60 -O /dev/null --progress=dot http://localhost:9091/ping
      - run:
          name: Push Docker image to Quay
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io
            docker tag quay.io/plotly/image-exporter:$CIRCLE_SHA1 quay.io/plotly/image-exporter:$CIRCLE_BRANCH
            docker push quay.io/plotly/image-exporter:$CIRCLE_SHA1
            docker push quay.io/plotly/image-exporter:$CIRCLE_BRANCH
      - save_cache:
          paths:
            - node_modules
          key: v3-npm-{{ checksum "package-lock.json" }}

  electron-pack-and-release:
    docker:
      - image: circleci/node:8.11.1-browsers
    steps:
      - restore_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          keys:
            - v1-source-{{ .Branch }}-
            - v1-source-
      - checkout
      - save_cache:
          key: v1-source-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".git"
      - restore_cache:
          key: v3-npm-{{ checksum "package-lock.json" }}
          keys:
            - v3-npm-
      - run: node --version
      - run: npm --version
      - run: npm install
      - run:
          name: Electron-Builder pack
          command: npm run pack
      - save_cache:
          key: v3-npm-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: mkdir artifacts
      - run: mv release/*.yml artifacts || true
      - run: mv release/image-exporter* artifacts
      - store_artifacts:
          path: artifacts
